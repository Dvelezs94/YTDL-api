service: ytdl
frameworkVersion: '2'

custom:
  wsgi:
    app: app.app
    pythonBin: python3
    packRequirements: false
  pythonRequirements:
    dockerizePip: non-linux
  local:
    region: none
    deployment_bucket: none
    vpc:
      securityGroupId1: none
      subnetId1: none
    environment:
      local: true
  production:
    region: us-east-1
    deployment_bucket: ytdl-lambdas
    vpc:
      securityGroupId1: sg-e571b49a
      subnetId1: subnet-0f4647a2d6a82a522
    environment:
      local: false

provider:
  name: aws
  stage: ${opt:stage, 'local'}
  runtime: python3.7
  region: ${self:custom.${self:provider.stage}.region}
  role: arn:aws:iam::#{AWS::AccountId}:role/${self:provider.stage}_ytdl_role
  deploymentBucket:
    name: ${self:custom.${self:provider.stage}.deployment_bucket}
    serverSideEncryption: AES256
  vpc:
    securityGroupIds:
      - ${self:custom.${self:provider.stage}.vpc.securityGroupId1}
    subnetIds:
      - ${self:custom.${self:provider.stage}.vpc.subnetId1}
  httpApi:
    disableDefaultEndpoint: true

functions:
  app:
    name: ${self:provider.stage}-ytdl
    handler: wsgi.handler
    events:
      - http: ANY /
      - http: 'ANY /{proxy+}'
    environment:
      SECRETS_NAME_BASE: ${self:provider.stage}/ytdl/all
      LOCAL_ENV: ${self:custom.${self:provider.stage}.environment.local}
      
plugins:
  - serverless-wsgi
  - serverless-python-requirements
  - serverless-local-environment

package:
  exclude:
    - node_modules/**
    - venv/**
    - terraform/**
    - .secret